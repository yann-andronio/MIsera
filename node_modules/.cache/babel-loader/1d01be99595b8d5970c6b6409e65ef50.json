{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\wamp64\\\\www\\\\js-node16-1\\\\app-1\\\\src\\\\components\\\\ToDoList.js\";\n\nimport React, { Fragment } from 'react';\nimport ToDo from './ToDo';\n\nvar ToDoList = function ToDoList(_ref) {\n  var tasks = _ref.tasks,\n      match = _ref.match;\n  var filteredTasks;\n\n  switch (match.params.filter) {\n    case 'completed':\n      filteredTasks = tasks.filter(function (task) {\n        return task.completed;\n      });\n      break;\n\n    default:\n      filteredTasks = tasks;\n  }\n\n  if (filteredTasks.length !== 0) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"m-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, \"Liste de t\\xE2ches\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group m-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, filteredTasks.map(function (task) {\n      return /*#__PURE__*/React.createElement(ToDo, {\n        task: task,\n        key: task.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 53\n        }\n      });\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"m-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, \"Liste de t\\xE2ches\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group m-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, \"Aucune t\\xE2che r\\xE9alis\\xE9e\")));\n  }\n};\n\nexport default ToDoList;","map":{"version":3,"sources":["D:/wamp64/www/js-node16-1/app-1/src/components/ToDoList.js"],"names":["React","Fragment","ToDo","ToDoList","tasks","match","filteredTasks","params","filter","task","completed","length","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAoB;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAXC,KAAW,QAAXA,KAAW;AACjC,MAAIC,aAAJ;;AAEA,UAAQD,KAAK,CAACE,MAAN,CAAaC,MAArB;AACI,SAAK,WAAL;AACIF,MAAAA,aAAa,GAAGF,KAAK,CAACI,MAAN,CAAa,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,SAAT;AAAA,OAAjB,CAAhB;AACJ;;AACA;AACIJ,MAAAA,aAAa,GAAGF,KAAhB;AALR;;AAQA,MAAGE,aAAa,CAACK,MAAd,KAAuB,CAA1B,EAA4B;AACxB,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQL,aAAa,CAACM,GAAd,CAAkB,UAACH,IAAD;AAAA,0BAAU,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,GAAG,EAAEA,IAAI,CAACI,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AAAA,KAAlB,CAFR,CAFJ,CADJ;AAWH,GAZD,MAYK;AACD,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,CAFJ,CADJ;AAQH;AAEJ,CAlCD;;AAoCA,eAAeV,QAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport ToDo from './ToDo';\n\nconst ToDoList = ({tasks, match}) => {\n    let filteredTasks;\n    \n    switch (match.params.filter){\n        case 'completed' :\n            filteredTasks = tasks.filter(task => task.completed);\n        break;\n        default:\n            filteredTasks = tasks;\n    }\n    \n    if(filteredTasks.length!==0){\n        return (\n            <Fragment>\n                <h1 className=\"m-3\">Liste de tâches</h1>\n                <ul className=\"list-group m-3\">\n                    {\n                        filteredTasks.map((task) => <ToDo task={task} key={task.id} />)\n                    }\n                </ul>\n            </Fragment>\n        )\n        \n    }else{\n        return (\n            <Fragment>\n                <h1 className=\"m-3\">Liste de tâches</h1>\n                <ul className=\"list-group m-3\">\n                    <li className='list-group-item'>Aucune tâche réalisée</li>\n                </ul>\n            </Fragment>\n        )\n    }\n\n}\n\nexport default ToDoList;"]},"metadata":{},"sourceType":"module"}