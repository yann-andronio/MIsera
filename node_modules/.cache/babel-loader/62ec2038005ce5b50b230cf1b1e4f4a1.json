{"ast":null,"code":"import _classCallCheck from \"D:\\\\wamp64\\\\www\\\\js-node16-1\\\\app-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\wamp64\\\\www\\\\js-node16-1\\\\app-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\wamp64\\\\www\\\\js-node16-1\\\\app-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\wamp64\\\\www\\\\js-node16-1\\\\app-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\wamp64\\\\www\\\\js-node16-1\\\\app-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\wamp64\\\\www\\\\js-node16-1\\\\app-1\\\\src\\\\components\\\\App.js\";\nimport React, { Fragment } from 'react';\nimport ToDoList from './ToDoList';\nimport NavBar from './NavBar';\nimport AddTask from './AddTask';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Data from '../Data';\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onToggleCompleted = function (taskId) {\n      var taskToUpdate = _this.state.tasks.find(function (task) {\n        return task.id === taskId;\n      });\n\n      taskToUpdate.completed = !taskToUpdate.completed;\n    };\n\n    _this.state = {\n      tasks: Data\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"section\", {\n        id: \"todo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(BrowserRouter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/add-task\",\n        component: AddTask,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/:filter?\",\n        render: function render(props) {\n          return /*#__PURE__*/React.createElement(ToDoList, Object.assign({}, props, {\n            tasks: _this2.state.tasks,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 62\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(NavBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["D:/wamp64/www/js-node16-1/app-1/src/components/App.js"],"names":["React","Fragment","ToDoList","NavBar","AddTask","BrowserRouter","Switch","Route","Data","App","props","onToggleCompleted","taskId","taskToUpdate","state","tasks","find","task","id","completed","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA4C,kBAA5C;AACA,OAAOC,IAAP,MAAiB,SAAjB;;IAEMC,G;;;AACJ,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,6EAAMA,KAAN;;AADgB,UAOlBC,iBAPkB,GAOE,UAACC,MAAD,EAAW;AAC7B,UAAIC,YAAY,GAAG,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,IAAjB,CAAsB,UAAAC,IAAI;AAAA,eAAEA,IAAI,CAACC,EAAL,KAAUN,MAAZ;AAAA,OAA1B,CAAnB;;AACAC,MAAAA,YAAY,CAACM,SAAb,GAAyB,CAACN,YAAY,CAACM,SAAvC;AAED,KAXiB;;AAEhB,UAAKL,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEP;AADI,KAAb;AAFgB;AAKjB;;;;6BAQO;AAAA;;AACN,0BACE;AAAS,QAAA,EAAE,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,SAAS,EAAEJ,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,MAAM,EAAE,gBAACM,KAAD;AAAA,8BAAS,oBAAC,QAAD,oBAAcA,KAAd;AAAqB,YAAA,KAAK,EAAE,MAAI,CAACI,KAAL,CAAWC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAT;AAAA,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,eAKI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ,CADF,CADF;AAaD;;;;EA5Bef,KAAK,CAACoB,S;;AA+BxB,eAAeX,GAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport ToDoList from './ToDoList';\nimport NavBar from './NavBar';\nimport AddTask from './AddTask';\nimport { BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Data from '../Data';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      tasks: Data\n    }\n  }\n  \n  onToggleCompleted = (taskId) =>{\n    let taskToUpdate = this.state.tasks.find(task=>task.id===taskId)\n    taskToUpdate.completed = !taskToUpdate.completed\n\n  }\n\n  render(){\n    return(\n      <section id=\"todo\">\n        <BrowserRouter>\n            <Fragment>\n                <Switch>\n                    <Route path=\"/add-task\" component={AddTask} />\n                    <Route path=\"/:filter?\" render={(props)=><ToDoList {...props} tasks={this.state.tasks} />} />\n                </Switch>\n                <NavBar />\n            </Fragment>\n        </BrowserRouter>\n      </section>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}