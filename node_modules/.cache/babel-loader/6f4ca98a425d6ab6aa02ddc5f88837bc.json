{"ast":null,"code":"import _toConsumableArray from \"D:\\\\HTDOCS\\\\www\\\\Niveau2-Gr1\\\\React\\\\app-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\HTDOCS\\\\www\\\\Niveau2-Gr1\\\\React\\\\app-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\HTDOCS\\\\www\\\\Niveau2-Gr1\\\\React\\\\app-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\HTDOCS\\\\www\\\\Niveau2-Gr1\\\\React\\\\app-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\HTDOCS\\\\www\\\\Niveau2-Gr1\\\\React\\\\app-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\HTDOCS\\\\www\\\\Niveau2-Gr1\\\\React\\\\app-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\HTDOCS\\\\www\\\\Niveau2-Gr1\\\\React\\\\app-1\\\\src\\\\components\\\\App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport ToDoList from './ToDoList';\nimport NavBar from './NavBar';\nimport Data from '../Data';\nimport AddTask from './AddTask';\nimport uniqid from 'uniqid';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onToggleCompleted = function (taskId) {\n      var taskToUpdate = _this.state.tasks.find(function (arg) {\n        return arg.id === taskId;\n      });\n\n      taskToUpdate.completed = !taskToUpdate.completed;\n\n      _this.setState(function (prevState) {\n        return prevState.tasks.map(function (task) {\n          return task.id === taskId ? taskToUpdate : task;\n        });\n      });\n    };\n\n    _this.onAddTask = function (newTask) {\n      var valueTask = {\n        id: uniqid(),\n        name: newTask,\n        completed: false\n      };\n\n      _this.setState(function (prevState) {\n        return {\n          tasks: [].concat(_toConsumableArray(prevState.tasks), [valueTask])\n        };\n      });\n    };\n\n    _this.onDeleteCompleted = function () {\n      _this.setState(function (prevState) {\n        var filterTasks = prevState.tasks.filter(function (arg) {\n          return !arg.completed;\n        });\n        return {\n          tasks: filterTasks\n        };\n      });\n    };\n\n    _this.state = {\n      tasks: Data\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Router, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/add-task\",\n        render: function render(props) {\n          return /*#__PURE__*/React.createElement(AddTask, Object.assign({}, props, {\n            onAddTask: _this2.onAddTask,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 54\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/:filter?\",\n        render: function render(props) {\n          return /*#__PURE__*/React.createElement(ToDoList, Object.assign({}, props, {\n            tasks: _this2.state.tasks,\n            onToggleCompleted: _this2.onToggleCompleted,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 54\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(NavBar, {\n        onDeleteCompleted: this.onDeleteCompleted,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component); //end App class\n\n\nexport default App;","map":{"version":3,"sources":["D:/HTDOCS/www/Niveau2-Gr1/React/app-1/src/components/App.js"],"names":["React","Component","Fragment","BrowserRouter","Router","Switch","Route","ToDoList","NavBar","Data","AddTask","uniqid","App","props","onToggleCompleted","taskId","taskToUpdate","state","tasks","find","arg","id","completed","setState","prevState","map","task","onAddTask","newTask","valueTask","name","onDeleteCompleted","filterTasks","filter"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport ToDoList from './ToDoList';\nimport NavBar from './NavBar';\nimport Data from '../Data'\nimport AddTask from './AddTask';\nimport uniqid from 'uniqid';\n\nclass App  extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      tasks: Data\n    }\n  }\n\n  onToggleCompleted = (taskId) => {\n\tlet taskToUpdate = this.state.tasks.find(arg=>arg.id===taskId)\n\ttaskToUpdate.completed = !taskToUpdate.completed\n\tthis.setState(\n\t\tprevState => prevState.tasks.map(\n\t\t\ttask => {return task.id===taskId ? taskToUpdate : task}\n\t\t)\n\t)\n  }\n\n  onAddTask = (newTask) => {\n      let valueTask = {id: uniqid(), name: newTask, completed: false}\n      this.setState(\n        prevState => ({\n          tasks: [ ...prevState.tasks, valueTask]\n        })\n      )\n  }\n\n  onDeleteCompleted = () => {\n    this.setState(\n      prevState => {\n        let filterTasks = prevState.tasks.filter(arg => !arg.completed)\n        return {tasks: filterTasks}\n      }\n    )\n  }\n\n  render(){\n    return(\n      <Router>\n        <Fragment>\n          <Switch>\n            <Route path=\"/add-task\" render={(props)=><AddTask {...props} onAddTask={this.onAddTask} />} />\n            <Route path=\"/:filter?\" render={(props)=><ToDoList {...props} tasks={this.state.tasks} onToggleCompleted={this.onToggleCompleted} />} />\n          </Switch>\n          <NavBar onDeleteCompleted={this.onDeleteCompleted} />\n        </Fragment>\n      </Router>\n    )\n  }\n\n}//end App class\n\nexport default App;"]},"metadata":{},"sourceType":"module"}