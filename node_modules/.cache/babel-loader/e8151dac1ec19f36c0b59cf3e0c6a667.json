{"ast":null,"code":"import _classCallCheck from \"D:\\\\wamp64\\\\www\\\\js-node16-1\\\\app-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\wamp64\\\\www\\\\js-node16-1\\\\app-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\wamp64\\\\www\\\\js-node16-1\\\\app-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\wamp64\\\\www\\\\js-node16-1\\\\app-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\wamp64\\\\www\\\\js-node16-1\\\\app-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\wamp64\\\\www\\\\js-node16-1\\\\app-1\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport ToDoList from './ToDoList';\nimport NavBar from './NavBar';\nimport AddTask from './AddTask';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Data from '../Data';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onToggleCompleted = function (taskId) {\n      var tasktoUpdate = _this.state.tasks.find(function (task) {\n        return task.id === taskId;\n      });\n\n      _this.setState(function (prevState) {\n        return prevState.tasks.map(function (tasks) {\n          return tasks.id === taskId ? tasktoUpdate : tasks;\n        }) //map\n        ;\n      } //prevState\n      ); //setState\n\n    };\n\n    _this.state = {\n      tasks: Data\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"section\", {\n        id: \"toDo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(BrowserRouter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/add-task\",\n        component: AddTask,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/:filter?\",\n        render: function render(props) {\n          return /*#__PURE__*/React.createElement(ToDoList, Object.assign({}, props, {\n            tasks: _this2.state.tasks,\n            onToggleCompleted: _this2.onToggleCompleted,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 58\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(NavBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      })))); //end return in render\n    } //end render\n\n  }]);\n\n  return App;\n}(Component); //end App class\n\n\nexport default App;","map":{"version":3,"sources":["D:/wamp64/www/js-node16-1/app-1/src/components/App.js"],"names":["React","Component","ToDoList","NavBar","AddTask","BrowserRouter","Switch","Route","Data","App","props","onToggleCompleted","taskId","tasktoUpdate","state","tasks","find","task","id","setState","prevState","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,aAAT,EAAyBC,MAAzB,EAAiCC,KAAjC,QAA6C,kBAA7C;AACA,OAAOC,IAAP,MAAiB,SAAjB;;IAEMC,G;;;AAEJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAKnBC,iBALmB,GAKC,UAACC,MAAD,EAAW;AAC7B,UAAIC,YAAY,GAAG,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,IAAjB,CAAsB,UAAAC,IAAI;AAAA,eAAEA,IAAI,CAACC,EAAL,KAAYN,MAAd;AAAA,OAA1B,CAAnB;;AAEA,YAAKO,QAAL,CACE,UAAAC,SAAS;AAAA,eACPA,SAAS,CAACL,KAAV,CAAgBM,GAAhB,CAAoB,UAAAN,KAAK,EAAG;AAAC,iBAAOA,KAAK,CAACG,EAAN,KAAaN,MAAb,GAAsBC,YAAtB,GAAqCE,KAA5C;AAAkD,SAA/E,CADO,CACyE;AADzE;AAAA,OADX,CAGG;AAHH,QAH6B,CAO5B;;AAGF,KAfkB;;AAEjB,UAAKD,KAAL,GAAa;AAACC,MAAAA,KAAK,EAACP;AAAP,KAAb;AAFiB;AAGlB;;;;6BAcO;AAAA;;AACN,0BACE;AAAS,QAAA,EAAE,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,SAAS,EAAEJ,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,MAAM,EAAE,gBAACM,KAAD;AAAA,8BAAS,oBAAC,QAAD,oBAAcA,KAAd;AAAqB,YAAA,KAAK,EAAE,MAAI,CAACI,KAAL,CAAWC,KAAvC;AAA8C,YAAA,iBAAiB,EAAE,MAAI,CAACJ,iBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAT;AAAA,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADF,eAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF,CADF,CADF,CADM,CAaL;AACF,K,CAAA;;;;;EAjCgBV,S,GAmClB;;;AAED,eAAeQ,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport ToDoList from './ToDoList';\nimport NavBar from './NavBar';\nimport AddTask from './AddTask';\nimport { BrowserRouter , Switch, Route} from 'react-router-dom';\nimport Data from '../Data';\n\nclass App  extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {tasks:Data};\n  }\n\n  onToggleCompleted = (taskId) =>{\n    let tasktoUpdate = this.state.tasks.find(task=>task.id === taskId);\n    \n    this.setState(\n      prevState => (\n        prevState.tasks.map(tasks =>{return tasks.id === taskId ? tasktoUpdate : tasks})//map\n      )//prevState\n    )//setState\n    \n\n  }\n\n  render(){\n    return(\n      <section id=\"toDo\">\n        <BrowserRouter>\n          <>\n            <Switch>\n                <Route path=\"/add-task\" component={AddTask} />\n                <Route path=\"/:filter?\" render={(props)=><ToDoList {...props} tasks={this.state.tasks} onToggleCompleted={this.onToggleCompleted} />} />\n            </Switch>\n            <NavBar />\n          </>\n        </BrowserRouter>\n    </section>\n    )//end return in render\n  }//end render\n\n}//end App class\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}