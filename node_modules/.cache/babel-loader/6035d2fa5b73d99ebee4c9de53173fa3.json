{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\wamp64\\\\www\\\\js-node16-1\\\\app-1\\\\src\\\\components\\\\ToDoList.js\";\n\nimport React from 'react';\nimport ToDo from './ToDo';\n\nvar ToDoList = function ToDoList(_ref) {\n  var tasks = _ref.tasks,\n      match = _ref.match,\n      onToggleCompleted = _ref.onToggleCompleted;\n  var filteredTasks;\n\n  switch (match.params.filter) {\n    case 'completed':\n      filteredTasks = tasks.filter(function (task) {\n        return task.completed;\n      });\n      break;\n\n    default:\n      filteredTasks = tasks;\n  }\n\n  if (filteredTasks.length !== 0) {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, \"Liste des t\\xE2ches\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, filterTask.map(function (arg) {\n      return /*#__PURE__*/React.createElement(ToDo, {\n        key: arg.id,\n        task: arg,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 38\n        }\n      });\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"Liste des t\\xE2ches\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, \"Aucune liste\")));\n  }\n};\n\nexport default ToDoList;","map":{"version":3,"sources":["D:/wamp64/www/js-node16-1/app-1/src/components/ToDoList.js"],"names":["React","ToDo","ToDoList","tasks","match","onToggleCompleted","filteredTasks","params","filter","task","completed","length","filterTask","map","arg","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAsC;AAAA,MAApCC,KAAoC,QAApCA,KAAoC;AAAA,MAA7BC,KAA6B,QAA7BA,KAA6B;AAAA,MAAtBC,iBAAsB,QAAtBA,iBAAsB;AACnD,MAAIC,aAAJ;;AAEA,UAAQF,KAAK,CAACG,MAAN,CAAaC,MAArB;AACI,SAAK,WAAL;AACIF,MAAAA,aAAa,GAAGH,KAAK,CAACK,MAAN,CAAa,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,SAAT;AAAA,OAAjB,CAAhB;AACJ;;AACA;AACIJ,MAAAA,aAAa,GAAGH,KAAhB;AALR;;AASA,MAAGG,aAAa,CAACK,MAAd,KAAuB,CAA1B,EAA4B;AAExB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQC,UAAU,CAACC,GAAX,CACI,UAACC,GAAD;AAAA,0BAAS,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,GAAG,CAACC,EAAf;AAAmB,QAAA,IAAI,EAAED,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT;AAAA,KADJ,CAFR,CAFJ,CADJ;AAYH,GAdD,MAcK;AACD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAFJ,CADJ;AAQH;AACJ,CApCD;;AAsCA,eAAeZ,QAAf","sourcesContent":["import React from 'react';\nimport ToDo from './ToDo'\n\nconst ToDoList = ({tasks, match, onToggleCompleted}) =>{\n    let filteredTasks\n    \n    switch (match.params.filter){\n        case 'completed' :\n            filteredTasks = tasks.filter(task => task.completed)\n        break;\n        default:\n            filteredTasks = tasks\n    }\n\n\n    if(filteredTasks.length!==0){\n\n        return(\n            <section>\n                <h1>Liste des tâches</h1>\n                <ul>\n                    {\n                        filterTask.map(\n                            (arg) => <ToDo key={arg.id} task={arg} />\n                        )\n                    }\n                </ul>\n            </section>\n        )\n    }else{\n        return(\n            <section>\n                <h1>Liste des tâches</h1>\n                <ul>\n                    <li>Aucune liste</li>\n                </ul>\n            </section>\n        )\n    }\n}\n\nexport default ToDoList;"]},"metadata":{},"sourceType":"module"}